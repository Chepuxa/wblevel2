package main
 
import (
    "fmt"
)
 
/*
Defer позволяет отложить выполнение некоторой функции до того, как завершится другая функция
- Выражение defer добавляет функцию в стек, и она будет вызвана в обратном порядке, то есть последняя добавленная функция будет вызвана первой (LIFO)
- Аргументы отложенной функции оцениваются немедленно, а не в момент вызова
- Функции defer вызываются после того, как определен результат внешней функции, но перед тем, как внешняя функция завершит return
- Функции defer имеют доступ к именнованным возвращаемым переменным внешней функции

Вывод:
2
1
*/
func main() {
    fmt.Println(test())
    fmt.Println(anotherTest())
}

func test() (x int) {
    defer func() {
        fmt.Println(x, "fff")
        x++
    }()
    x = 1
    fmt.Println(x, "zzzz")
    return
}
 
 
func anotherTest() int {
    var x int
    defer func() {
        x++
    }()
    x = 1
    return x
}
